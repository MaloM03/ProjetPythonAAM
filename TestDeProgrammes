import tkinter as tk
from tkinter import ttk

class MaFenetre(tk.Tk):
    def __init__(self):
        super().__init__()

        self.title("Exemple de Fenêtre")
        self.geometry("600x400")

        # Création du Treeview (tableau)
        self.tree = ttk.Treeview(self, columns=("Nom", "Chiffre"), show="headings")

        # Configuration des colonnes
        self.tree.heading("Nom", text="Nom")
        self.tree.heading("Chiffre", text="Chiffre")

        # Ajout des données au tableau
        for i in range(1, 11):
            self.tree.insert("", "end", values=(f"Nom {i}", f"Chiffre {i}"))

        # Lier l'événement de sélection à la fonction
        self.tree.bind("<ButtonRelease-1>", self.selection_ligne_tableau)

        # Affichage du tableau
        self.tree.pack(pady=10)

        # Label "test chiffre"
        self.label_test_chiffre = tk.Label(self, text="Test Chiffre", font=("Arial", 10, "bold"))
        # Zone de saisie
        self.entry_test_chiffre = tk.Entry(self)
        # Bouton de validation
        self.button_valider_test_chiffre = tk.Button(self, text="Valider", command=self.valider_saisie_test_chiffre)
        # Label "invalide"
        self.label_invalide = tk.Label(self, text="Invalide", fg="red")

    def selection_ligne_tableau(self, event):
        # Récupérer la ligne sélectionnée
        selected_item = self.tree.selection()
        if selected_item:
            # Afficher le label "test chiffre" et la zone de saisie
            self.label_test_chiffre.pack(pady=5)
            self.entry_test_chiffre.pack(pady=5)
            self.button_valider_test_chiffre.pack(pady=5)
            # Masquer le label "invalide"
            self.label_invalide.pack_forget()

    def valider_saisie_test_chiffre(self):
        # Récupérer la valeur de la zone de saisie
        valeur_saisie = self.entry_test_chiffre.get()

        # Vérifier si la valeur saisie est un nombre
        try:
            float(valeur_saisie)
        except ValueError:
            # Afficher le label "invalide" si ce n'est pas un nombre
            self.label_invalide.pack(pady=5)
            return

        # Récupérer la ligne sélectionnée
        selected_item = self.tree.selection()
        if selected_item:
            # Mettre à jour la valeur dans la colonne "Chiffre" de la ligne sélectionnée
            self.tree.item(selected_item, values=(self.tree.item(selected_item, "values")[0], valeur_saisie))
            # Cacher le label "invalide" si la mise à jour réussit
            self.label_invalide.pack_forget()

if __name__ == "__main__":
    app = MaFenetre()
    app.mainloop()
